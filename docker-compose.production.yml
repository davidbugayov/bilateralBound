version: '3.8'

services:
  # Основное приложение для продакшена
  bilateral-bound:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: bilateral-bound-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=error
      - ENABLE_LOGGING=false
      - ENABLE_METRICS=true
      - MAX_SESSIONS=15
      - MAX_VIEWERS_PER_SESSION=2
      - TICK_RATE=10
      - CLEANUP_INTERVAL=1200000
      - SESSION_TIMEOUT=600000
      - INACTIVE_TIMEOUT=60000
      - NO_VIEWER_TIMEOUT=60000
      - RATE_LIMIT_MAX=15
      - API_RATE_LIMIT=2
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./public:/app/public
    networks:
      - bilateral-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx для продакшена (опционально)
  nginx:
    image: nginx:alpine
    container_name: bilateral-bound-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.production.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
    networks:
      - bilateral-network
    depends_on:
      - bilateral-bound
    deploy:
      resources:
        limits:
          memory: 32M
          cpus: '0.05'
        reservations:
          memory: 16M
          cpus: '0.02'

networks:
  bilateral-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  logs:
    driver: local 